<?xml version="1.0" encoding="utf-8" ?>
<Test Name="Tenta">
	<TestQuestion Category="Mobility">
	    <Question>
	    	Vad innebär statisk respektive dynamisk stabilitet?
	    </Question>
	    <Answer>

	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Vad är det huvudsakliga problemen för locomotion?
	    </Question>
	    <Answer>
	    	[b]Stabilitet[/b]
	    	[ul]
	    		[li]Antalet och geometri för kontaktpunkterna.[/li]
	    		[li]Tyndpunkten.[/li]
	    		[li]Statisk/dynamisk stabilitet.[/li]
	    		[li]Inklination (lutning?) för terrängen.[/li]
	    	[/ul][b]Träffytans egenskaper[/b]
	    	[ul]
	    		[li]Kontaktpunktens bana, storlek och form.[/li]
	    		[li]Träffvinkel (angle of contact).[/li]
	    		[li]Friktion.[/li]
	    	[/ul][b]Typ av miljö[/b][ul]
	    		[li]Struktur.[/li]
	    		[li]Medium - vatten, luft, mjukmark, hårdmark.[/li]
	    	[/ul]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Vad är för- och nackdelarna med rörelse baserad på ben?
	    </Question>
	    <Answer>
	    	[b]Fördelar[/b][ul]
	    		[li]Möjligt att hantera svår terräng bra.[/li]
	    		[li]Endast kontaktpunkterna behöver vara bra, marken mellan dem spelar ingen roll.[/li]
	    	[/ul][b]Nackdelar[/b][ul]
	    		[li]Mekaniskt komplext.[/li]
	    		[li]Tar mycket kraft.[/li]
	    	[/ul]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Vad innebär gait?
	    </Question>
	    <Answer>
	    	Sekvensen av lyft och släpp händelser för individuella ben. Fler ben ger fler möjliga gaits.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Hur man bör man flytta benen för att det statistiskt ska bli stability?
	    </Question>
	    <Answer>
	    	Man ska flytta benen i grupper av tre ben.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Vad innebär bipeds och quadrupeds?
	    </Question>
	    <Answer>
	    	Bipeds: Två ben.
	    	Quadrupeds: Fyra ben. Blir statistiskt sätt stabilt när roboten står stilla.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	När behövs den upphängning för robotar med hjul?
	    </Question>
	    <Answer>
	    	Typiskt när man har fler än 3 hjul. Annars tappar man kontakt med marken om den inte är perfekt platt.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Vad är ett "swedish wheel" för något?
	    </Question>
	    <Answer>

	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Vad innebär det att en robot är "omnidirectional"?
	    </Question>
	    <Answer>
	    	Att roboten kan röra sig i vilken riktning som helst (i planet) oberoende av robotens orientering.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Vad innebär "slip/skid" styrning?
	    </Question>
	    <Answer>
	    	Det innebär att man svänger genom att ha olika hastigheter på de olika hjulen. Är mycket energy ineffektiv när friktionen är hög.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Vad är för- och nackdelar med olika typer av flygande robotar?
	    </Question>
	    <Answer>
	    	[b]Fasta vingar (fixed wing)[/b]
	    	[ul]
	    		[li]Kan glidflyga.[/li]
	    		[li]Kan röra sig snabbt.[/li]
	    		[li]Kan ej stå stilla.[/li]
	    		[li]Behöver stor yta för start/landning.[/li]
	    	[/ul][b]Flera rotorer[/b]
	    	[ul]
	    		[li]Kan stå stilla.[/li]
	    		[li]Kan lätt ändra höjd.[/li]
	    		[li]Kan flyga nära marken.[/li]
	    		[li]Behöver liten yta för start/landning.[/li]
	    		[li]Begränsad räckvidd.[/li]
	    	[/ul]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Vad krävs det för att kontrollera rörelsen för en robot?
	    </Question>
	    <Answer>
	    	[ul]
	    		[li]Kinematisk/dynamisk modell av roboten.[/li]
	    		[li]Modell för kontakten med marken (mycket komplicerat).[/li]
	    		[li]Definitionen av rörelsen som ska utföras.[/li]
	    		[li]Design av en kontroll metod.[/li]
	    		[li]Verifikationen och finjustering.[/li]
	    	[/ul]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Hur lyder den kinematiska modellen för differential drive?
	    </Question>
	    <Answer>
	    	Vi har två hjul, robotens position och orientering i rummet "pose" beskrivs av tre parameterar: [math]x, y, theta[/math]. Vi antar att hjulens radie är den samma ([math]r[/math]) och avståndet mellan de två hjulen är [math]B=2l[/math]. Vi kontrollerar roboten genom att ändra vinkelhastigheten för de respektive hjulen: [math]phi_R, phi_L[/math].

	    	Då blir:
	    	[math]v = r / 2 (phi_R + phi_L), omega = r / (2l) (phi_R - phi_L)[/math].
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mobility">
	    <Question>
	    	Vad är holonomy?
	    </Question>
	    <Answer>
	    	En robot är [i]holonomisk[/i] om vi kan kontrollera [i]alla[/i] frihetsgrader. En robot som vi ej kan kontrollera alla sägers var [i]icke-holonomisk[/i].
	    </Answer>
	</TestQuestion>
		<TestQuestion Category="Mobility">
	    <Question>
	    	Vad är skillnanden mellan en path och en trajectory?
	    </Question>
	    <Answer>
	    	En trajectory är en path med tiden specificerad.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad är en sensor?
	    </Question>
	    <Answer>
	    	Det ger en uppskattning av miljön och robotens tillstånd.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Ange olika klassificeringar som kan göras av sensorer.
	    </Question>
	    <Answer>
	    	Sensosrer kan delas in i beroende på vad som mäts:
	    	[b]Proprioceptive (PC) sensors[/b]
	    	Mäter värden som är interna för roboten, som t.ex. motorhastighet, riktning, batteristatus.

	    	[b]Exteroceptive (EC) sensors[/b]
	    	Ger information från robotens miljö, som t.ex. avstånd till objekt, ljudsättning.

	    	Men det går även att dela in baserat på hur mätningen går till:
	    	[b]Passive (P) sensors[/b]
	    	Energin kommer ifrån miljön, som t.ex. kamera, mikrofon.

	    	[b]Active (A) sensors[/b]
	    	Man skickar ut energi och mäter reaktionen. Detta ger ofta bättre prestanda, men påverkas till viss mån av miljön. Exempel är laser sensorer och sonar.
	    </Answer>
	</TestQuestion>
		<TestQuestion Category="Sensing">
	    <Question>
	    	Vad mäter en encoder?
	    </Question>
	    <Answer>
	    	Den mäter rotationen för ett hjul, men kan också användas för att mätas positionen för en led för en arm. Det finns i huvudsakligen två olika typer: inkrementell och absolut.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Ange olika metoder som encoders använder sig av.
	    </Question>
	    <Answer>
	    	[b]Optiskt[/b]
	    	Den använder sig av en ljuskälla och en detektor. Ljuskällan skickas genom ett hjul, med hål i. Rotationen mäts då genom att att om ljuset går igenom hållet eller inte genererar en puls. En optisk encoder kan oftast ha flera tusen "ticks" per varv.

	    	[b]Magnetiskt[/b]
	    	Använder sig av magnetiskt material på disken istället för hål. Sensorser (som ofta använder sig av hall-effekten) upptäcker när en magnetiskt material passerar. Har ofta mindre upplösning än en optiskt encoder (typiskt mindre än 12), men är billigare.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Hur fungerar en inkrementell encoder?
	    </Question>
	    <Answer>
	    	Genom att använda sig två detektorer, som ligger 90 grader ur fas. Detta genererar två olika pulser. Genom att kolla på tillståndssekvesen, så kan även riktningen för ändringen bestämmas.

	    	[img]https://dl.dropboxusercontent.com/u/4940720/TentaPluggGenerator/images/IncrementalEncoder.png[/img]  
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Hur fungerar en absolut encoder?
	    </Question>
	    <Answer>
	    	Genom att använda sig av flera olika "varv" av hål. Man skapar då en specifik kod för varje position som läses av.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad mäter en potentiometer?
	    </Question>
	    <Answer>
	    	Mäter variabel resistans vilket kan användas för linjär eller vinkelhastighet. Används oftast som kontrol för användare.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad är den främsta fördelen med kompasser jämförelse med andra sensorer för att mäta orientering?
	    </Question>
	    <Answer>
	    	Att den mäter orientering i ett absolut koordinat system istället för relativt.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad för problem finns det med en kompass?
	    </Question>
	    <Answer>
	    	Är mycket känslig emot andra magnetiska materia vilket gör den svårt att använda i miljöer konstruerade av människor.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad är (rate) gyroskop för något?
	    </Question>
	    <Answer>
	    	Det är en sensor som mäterrotationshastigheten. För att få orienteringen så kan man integrera värdet. Sensorn beror ofta på temperaturen vilket ger brus som får värdet att avika efter tid.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad är en accelerometer?
	    </Question>
	    <Answer>
	   		Den mäter linjär acceleration. Problemet är att den inte mäta vinkel för accelerationen, vilket gör att den inte kan urskilja accelerationen ifrån tyngdkraften. För att få positionen så kan man integrera värdet två gånger. Den är också mycket känslig för brus och kräver att man vet orienteringen så att man kan ta bort tyngdkraften.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad mäter en inclinometer?
	    </Question>
	    <Answer>
	    	Lutningen vilket kan göras med olika metoder: accelerometer, gasbubbla i vätska.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad innebär cross sensitivity?
	    </Question>
	    <Answer>
	    	Att mätningen av acceleration eller rotationen runt en axel påverkas ofta av andra saker som t.ex. påverkan från andra axlar och att gyroskop regerar av acceleration.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad är en IMU?
	    </Question>
	    <Answer>
	    	IMU står för Inertial measurement unit och kombinerar accelerator och gyroskop i tre axlar, men kommer också med magnetometers.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad är tactila sensorer för något?
	    </Question>
	    <Answer>
	    	Den mäter fysisk interkation med miljön. Exempel är bumper switches och non-contact proximity sensors.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Ange olika typer av bumper switches.
	    </Question>
	    <Answer>
	    	[ul]
	    		[li]Kontakt - om en knapp trycks in.[/li]
	    		[li]Ljus - om en ljustråle bryts.[/li]
	    	[/ul]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad mäter kapacitiva sensorer?
	    </Question>
	    <Answer>
	    	Förändringen i kapacitet. Det används i pekskämar och proximity sensorer. Problemet är att inte allt upptäcks, för det kräver att materialet ledande.
	    </Answer>
	</TestQuestion>
	<!-- Något om inductive sensors? -->
	<TestQuestion Category="Sensing">
	    <Question>
	    	Hur fungerar Time-of-flight (TOF) för att mäta avstånd?
	    </Question>
	    <Answer>
	    	Man mäter tiden det tar för något att propagera (och komma tillbaka). Detta görs genom att man vet från början hastigheten för det man mäter i mediumet, och då ges avståndet av [math]d=(vt)/2[/math] där [math]v[/math] är hastigheten i mediumet.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Hur fungerar fasdifferans för att mäta avstånd?
	    </Question>
	    <Answer>
	    	Man mäter fasdifferansen ([math]theta[/math]) mellan en reflekterad signalen och den som skickades. Då ges avståndet av: [math]d=(lambda theta) / (4 pi)[/math] där [math]lambda[/math] är våglängden.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Hur fungerar triangulation för att mäta avstånd?
	    </Question>
	    <Answer>
	    	Se bilden nedan, och avståndet ges av: [math]d=(f L) / x[/math].
	    	[img]https://dl.dropboxusercontent.com/u/4940720/TentaPluggGenerator/images/Triangulation.png[/img].
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad för problem finns det med ultraljud för att mäta avstånd?
	    </Question>
	    <Answer>
	    	Hastigheten för ljud i luften är mycket liten (343 m/s vid 20 grader), vilket ger en låg sampling rate. Den är också [i]mycket[/i] känslig för temperaturer. Vissa material reflekterar inte heller ljud.
	    </Answer>
	</TestQuestion>
	<!-- Något om sonar?  -->
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad för problem finns det med använda IR för att mäta avstånd?
	    </Question>
	    <Answer>
	    	Att det finns problem att det inte finns 1-1 mappning mellan utdata ifrån sensor och avstånd, se bild nedan.

	    	[img]https://dl.dropboxusercontent.com/u/4940720/TentaPluggGenerator/images/IR.png[/img]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Hur fungerar en radar?
	    </Question>
	    <Answer>
	    	Först, radar står för: Radio Detection And Ragning. Det fungerar så att man skickar ut och tar emot en radiovåg. Om ett material har hög ledningsförmåga ger det en stark reflektion. Många material absorberar inte/reflekterar inte/sprider inte ut signalen, vilket ger den långt avstånd. 	Den ger båda avstånd och riktning för flera mål.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Hur fungerar en doppler radar?
	    </Question>
	    <Answer>
	    	När en skicka som man skickar ut reflekteras av ett mål som rör sig, så kommer signalen som man får tillbaka en förändrad frekvens (doppler effekten). Detta kan användas för att uppskatta  hastigheten hos objektet.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Hur bestäms positionen av en GPS mottagare?
	    </Question>
	    <Answer>
	    	Med hjälp av time-of-flight och triangulation.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad är de huvudsakliga utmaningarna för GPS?
	    </Question>
	    <Answer>
	    	[ul]
	    		[li]Tidssynkronisering mellan olika satelliter.[/li]
	    		[li]Realtids uppdatering av exakt position för satelliter.[/li]
	    		[li]Noggrann mättning av time-of-flight.[/li]
	    		[li]Störningar ifrån andra signaler.[/li]
	    	[/ul]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Ange fall när GPS inte fungerar.
	    </Question>
	    <Answer>
	    	När man inte få får in några satelliter, som t.ex. inomhus.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Sensing">
	    <Question>
	    	Ifrån hur många satelliter behövs det för att mäta positionen?
	    </Question>
	    <Answer>
	    	Det krävs minst 3 satelliter för att mäta positionen, och en till för att mäta höjden. Desto mer satelliter man får signaler ifrån ger bättre precision.
	    </Answer>
	</TestQuestion>
	<!-- Något om GPS Time synchronization? -->
	<TestQuestion Category="Sensing">
	    <Question>
	    	Vad kan man göra för att förbättra precisionen av GPS?
	    </Question>
	    <Answer>
	    	Man kan korrigera med hjälp av lokala stationer, detta kan ge precision i cm klassen.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
	    	Vad innebär dead reckoning?
	    </Question>
	    <Answer>
	    	Det innebär att vi estimera den relativa positionen med hjälp av encoders och den kinematiska modellen för roboten. Det är också möjligt att använda IMU, kameran eller att försöka matcha laser skanning från olika positioner.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
	    	Ange hur man kan mäta hastigheten för en robot som har diffenertial drive som kinematisk modell.
	    </Question>
	    <Answer>
	    	Låt [math]Delta E_R[/math] och [math]Delta E_L[/math] vara skillnaden i mätningar hos encoder över en tid [math]Delta T[/math]. Om [math]K[/math] är skalningsfaktor som omvandlar skillnad i encoder värde till skillnad i vinkel, [math]Delta phi = K Delta E[/math], då ges hastigheterna av: [math]v = (r / 2 (K Delta E_R + K Delta E_L)) / (Delta T), omega = (r / B (K Delta E_R - K Delta E_L)) / (Delta T)[/math].

	    	Då kan man beräkna [math]D = text{Ändring i sträcka} = v Delta T = r / 2 (K Delta E_R + K Delta E_L)[/math] och [math]Delta theta = text{Ändring i orientering} = omega Delta T = r / B (K Delta E_R - K Delta E_L)[/math].

	    	Detta ger att positionen och orientering kan estimeras som:
	    	[math]x(k+1)=x(k) + D*cos(theta)[/math]
	    	[math]y(k+1)=y(k) + D*sin(theta)[/math]
	    	[math]theta(k+1)=theta(k+1)+Delta theta[/math].
 	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
	    	Vad är odometri?
	    </Question>
	    <Answer>
	    	Det innebär att vi integrerar encoder mätningarna över tid m.h.a den kinematiska modellen för att estimera en robot position och orientering. Desto bättre kinematisk modell man använder, desto bättre odometri får man.

	    	Odometri är oftast mycket noggrant över ett kort avstånd, men kommer ofta börja driva ifrån den korrekta positionen över tid, och felet är obundet. Fel i vinkeln ger stora fel i positionen.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
	    	Hur kan man beskriva osäkerhet i odometri?
	    </Question>
	    <Answer>
	    	Som brus som appliceras på mätningarna:
	    	[math]x(k+1)=x(k)+(v*dt+Phi_D) * cos(theta)[/math]
	    	[math]y(k+1)=y(k)+(v*dt+Phi_D) * sin(theta)[/math]
	    	[math]theta(k+1)=theta(k)+(omega*dt+Phi_(theta, omega)) + Phi_(theta, v)[/math]
	    	där [math]Phi_D, Phi_(theta, omega), Phi_(theta, v)[/math] oftast antas vara normalfördelade med noll i väntevärde: [math]N(0, sigma^2)[/math].
 
	    	[math]sigma^2[/math] modelleras som något som beror på vinkelhastigheten:
	    	[math]Phi_D = N(0, (v * dt * k_D)^2)[/math]
	    	[math]Phi_(theta, v) = N(0, (v * dt * k_v)^2)[/math]
	    	[math]Phi_(theta, omega) = N(0, (omega * dt * k_(omega))^2)[/math]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
	    	Ange olika källor för fel i odometri.
	    </Question>
	    <Answer>
	    	[b]Systematiska fel[/b]
	    	[ul]
	    		[li]Fel storlek av hjulet i modellen.[/li]
	    		[li]Hjulen ligger ej i linje.[/li]
	    		[li]Begränsad encoder upplösning och sampling rate.[/li]
	    	[/ul][b]Icke-systematiska fel[/b]
	    	[ul]
	    		[li]Om marken ej är platt leder det till hjul rör sig kortare/längre.[/li]
	    		[li]Andra objekt på marken ger stora fel.[/li]
	    		[li]Hjulen glider[/li]
	    		[li]Externa krafter, som t.ex. att hjulet ej rör marken vid endast en punkt.[/li]
	    	[/ul]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
	    	Vad innebär kidnappingsproblemet inom lokalisering?
	    </Question>
	    <Answer>
	    	Det innebär att roboten "kidnappas" och placeras på något annat ställe. Roboten måste då först upptäcka att den har blivit kidnappad, och sedan utföra global lokalisering.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
	    	Hur kan vi formellt definiera lokaliserings problemet?
	    </Question>
	    <Answer>
	    	Låt [math]x[/math] vara robotens tillstånd (position och orientering), [math]z[/math] vara en observation och [math]u[/math] var kontroll input. Då gäller det att [math]p(x_(k+1) | x_k, x_(k-1)) = p(x_(k+1)|x_k), p(z_k | x_k), p(x_(k+1) | x_k, u_(k + 1))[/math].

	    	Detta innebär om vill bestämma robotens tillstånd vid tidpunkten [math]k+1[/math] så innehåller tillståndet vid tidpunkten [math]k[/math] all information om tidigare tillstånd. Det gäller även att mätningarna vid tidpunkt [math]k[/math] endast beror på tillståndet vid den tidpunkten och att tillståndet vid tidpunkt [math]k+1[/math] beror endast på tillståndet vid tidpunkten [math]k[/math] och kontroll inputen.

	    	Då blir estimeringen baserad på en kontroll input [math]u_k[/math]:
	    	[math]p(x_(k+1) | Z_k, U_k) = int p(x_(k+1) | u_k, x_k) p (x_k | X_k, Y_k) dx_k[/math] där [math]p(x_(k+1) | z_k, u_k)[/math] är den rörelsemodell som oftast ges av odometri.

	    	Uppdateras med nya mätningar [math]z_(k+1)[/math] enligt:
	    	[math]p(x_(k+1) | Z_(k+1), U_k) = eta p(z_(k+1) | x_(k+1)) p(x_(k+1) | Z_k, U_k)[/math] där [math]p(z_(k+1) | x_(k+1))[/math] är modellen för mätningarna och [math]eta[/math] en normaliserings konstant.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
			Ange olika sätt för att representera den probabilistiska informationen för lokaliserings problemet.
	    </Question>
	    <Answer>
	    	[b]Normalfördelning[/b]
	    	Med hjälp av en normalfördelning. Ett problem är att man ej kan representera en fördelning som är "multi modal", dvs. har flera "kullar".

	    	[b]Gaussian Mixture Model[/b]
	    	Problemet med "multi-modal" kan lösas genom att man kombinerar flera olika normalfördelningar.

	    	[b]Diskretisering[/b]
	    	Delar upp fördelningen i små delar.

	    	[b]Sampling[/b]
	    	Se nästan fråga.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
	    	Hur fungerar ett partikelfilter för lokalisering?
	    </Question>
	    <Answer>
	    	Ett partikelfilter representerar fördelningen m.h.a. av en mängd partiklar [math]p_k={ x_k, pi_k }[/math], som är samplade ifrån fördelningen. Varje partikel representerar en hypotes om tillståndet. Partikelns vikt, [math]pi_k[/math], initialiseras som [math]1/N[/math] där [math]N[/math] är antalet partiklar.

	    	Ekvationen för filtret ges av: [math]p(x_(k+1) | Z_(k+1), U_(k+1)) = eta int p(x_(k+1) | x_k, u_(k+1)) p(x_k | Z_k, U_k) dx_k[/math]. Filtret approximera detta genom att för varje nytt tillstånd uppskatta det genom rörelsemodellen [math]p(x_(k+1) | x_k, u_(k+1))[/math] (se frågan om odometri).

	    	När man uppskattar tillståndet så kommer partiklarna att sprida sig, dvs. att osäkerheten ökar. För att minska osäkerheten så kan man sig av IMU eller kalibrera odometri, för att begränsa felet så måste man använda sig av mätningar.

	    	Filtret approximerar uppdaterings ekvationen: [math]p(x_(k+1) | Z_(k+1), U_(k+1)) = eta p(z_(k+1) | x_(k+1)) p(x_(k+1) | Z_k, U_(k+1))[/math] genom att för varje partikel multiplicera vikten med likelihood för mätningarna: [math]p(z_(k+1) | x_(k+1))[/math].

	    	När partiklarna sprider sig (vilket det alltid kommer göra pga. brus i rörelsemodellen), så kommer allt färre partiklar vara i regioner där [math]p(x_k | Z_k, U_k)[/math] är stor, dvs. att approximationen har blir dålig. För att hantera det, så kan man resampla.

	    	Detta innebär att man skapar en ny mängd av partiklar, där sannolikheten att kopiera en partikel ifrån den gamla mängden till den nya är proportionerlig  till dess vikt (man kan även ha flera kopior av partiklar). Vikten för partikeln återställs även till [math]1/N[/math].
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
	    	Vad för egenskaper partikelfilter för lokalisering?
	    </Question>
	    <Answer>
	    	[ul]
	    		[li]Kan representera en godtycklig fördelning givet tillräckligt antal partiklar.[/li]
	    		[li]Kan hantera "multi-modal" utan problem.[/li]
	    		[li]Kan hantera icke-linjära system.[/li]
	    		[li]Kan vara beräkningsintensiv för vissa applikationer.[/li]
	    		[li]Precisionen beror på antalet partiklar.[/li]
	    		[li]Problem med högre dimensioner - antalet partiklar växer exponetiellt med antalet exponentiellt.[/li]
	    	[/ul]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
	    	Hur fungerar Kalmanfiltret?
	    </Question>
	    <Answer>
	    	Låt [math]x_k = f(x_(k-1), u_(k-1), w_(k-1))[/math] vara systemets dynamik (rörelsemodellen), [math]z_k=h(x_k, v_k)[/math] vara mätmodellen. Vi antar även att att bruset är normalfördelat: [math]p(w) = N(0, Q), p(v) = N(0, R)[/math].

	    	Vi kan sedan inte veta värdet för bruset, så vi antar att det är 0 för våra uppskattningar: [math]bar x_k = f(hat x_(k-1), u_(k-1), 0), bar z_k = h(hat x_k, 0)[/math].

	    	Vi kan sedan linjärisera systemet:
	    	[math]x_k ~~ bar x_k + A(x_(k-1) - hat x_(k-1)) + W w_(k-1)[/math]
	    	[math]z_k ~~ bar z_k + H(x_k - hat x_k + V v_(k-1)[/math]
	    	där [math]A, W, H, V[/math] är Jacobianer.

	    	För att estimera positionen gör vi följande:
	    	[math]hat x_k = f(bar x_(k-1), u_(k-1), 0), P_k^(-) = A_k P_(k-1) A_k^T W_k Q_(k-1) W_k^T[/math]

	    	För att uppdatera mätningarna för vi följande:
	    	[ol]
	    		[li]Beräkna Kalman gain: [math]K_k = P_k^(-) H_k^T (H_k P_k^(-) H_k^T + V_k R_k V_k^T)^(-1)[/math].[/li]
	    		[li]Uppdatera uppskatningen med mätningen [math]z_k[/math]: [math]hat x_k = hat x_k^(-) + K_k (z_k - h(hat x_k^(-1), 0))[/math][/li]
	    		[li]Uppdatera fel kovariansen: [math]P_k = (I - K-k H_k) P_k^(-)[/math].[/li]
	    	[/ol]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Localization">
	    <Question>
	    	Vad för egenskaper av EKF lokalisering?
	    </Question>
	    <Answer>
	    	[ul]
	    		[li]Mycket effektiv att beräkna.[/li]
	    		[li]Har använts i många olika områden för en lång tid.[/li]
	    		[li]Skalar väl till flera dimensioner.[/li]
	    		[li]Finns inga teoretiska garantier att systemet konvergerar om systemet är icke-linjärt, men fungerar bra i praktiken.[/li]
	    		[li]Kan ej hantera "multi-modal" fördelningar.[/li]
	    		[li]Linjärisering blir problematiskt i när systemet är osäkert med hänsyn till icke-linjäriteten.[/li]
	    		[li]Behöver en bra initialvärden för att konvergera.[/li]
	    	[/ul]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mapping">
	    <Question>
	    	Vad innebär SLAM?
	    </Question>
	    <Answer>
			För att skapa en karta, behöver vi veta positionen. Men ofta vet vi inte positionen, utan behöver en karta för att bestämma den. Denna innebär att vi bör göra båda samtidigt - bestämma positionen och kartan. Detta är idén bakom SLAM - Simultaneous Localization and Mapping.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mapping">
	    <Question>
	    	Ange olika sätt att representera kartan.
	    </Question>
	    <Answer>
			Det finns i huvudsakligen två olika riktningar: topologisk och metrisk. För metriska, är de två vanligaste representationer är features och occupancy grids.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mapping">
	    <Question>
	    	Hur fungerar ett occupancy grid?
	    </Question>
	    <Answer>
				I ett occupancy grid delar man upp världen i celler, där kartan definierar för varje cell om den är upptagen eller inte. Det är också möjligt att man representerar det med en sannolikhet istället, där 0 betyder definitivt fri och 1 upptagen.

				[b]Fördelar[/b]
				[ul]
					[li]Kräver ingen modell (model free).[/li]
					[li]Bra sätt för att hantera osäkerdata.[/li]
					[li]Modellerar explicit det fria utrymmet.[/li]
					[li]Visuellt komplett.[/li]
				[/ul][b]Nackdelar[/b]
				[ul]
					[li]Begränsad upplösning.[/li]
					[li]Kräver ofta mer beräkningar.[/li]
				[/ul]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mapping">
	    <Question>
	    	Hur fungerar en feature (landmark) karta?
	    </Question>
	    <Answer>
			Kartan representeras av en mängd av features: [math]M = { m_k | j = 1, ..., M }[/math], där exempel på features är punkter, linjer, plan, hörn, kanter, etc.

			[b]Fördelar[/b]
				[ul]
					[li]Kompakt.[/li]
					[li]Hög precision.[/li]
				[/ul][b]Nackdelar[/b]
			[ul]
				[li]Gles representation, modellerar ej det fria utrymmet[/li]
				[li]Behöver veta vilka features som behövs användas som prior.[/li]
			[/ul]
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mapping">
	    <Question>
	    	Hur fungerar en topologisk karta?
	    </Question>
	    <Answer>
			Kartan representeras av en graf, där varje hörn representerar en plats och kanterna mellan hörnen betecknar dörrar, trappor, etc.

			[b]Fördelar[/b]
				[ul]
					[li]Skalar bra med storleken av miljön.[/li]
					[li]Kan skapas utan krav att veta den exakta geometrin.[/li]
					[li]Lätt att göra path planning.[/li]
			[/ul][b]Nackdelar[/b]
			[ul]
				[li]Informationen för postionen är väldigt grov.[/li]
				[li]Kräver att roboten kan upptäcka vilken plats den är i, vilket i praktiken är mycket svårt.[/li]
			[/ul]
    	</Answer>
	</TestQuestion>
	<TestQuestion Category="Mapping">
	    <Question>
	    	Hur fungerar EKF SLAM?
	    </Question>
	    <Answer>
			Det är samma idé som för EKF för lokalisering, men att vi nu också låter landmarks vara en del av tillståndsvektorn. Detta ger att tillståndsvektorn växer med tiden. Det är ofta problem med konsistens pga. osäkerhet och icke-linjäritet.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mapping">
	    <Question>
	    	Kan man använda ett partikelfilter för SLAM?
	    </Question>
	    <Answer>
			Det är ofta inte en bra lösning, för att partikelfilter skalar dåligt med antalet dimensioner (antalet features i det här fallet).
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mapping">
	    <Question>
	    	Vad är Rao-blackwellized particle filter (RBPF)?
	    </Question>
	    <Answer>
			Den kombinerar styrkan hos Kalmanfiltret (skalbarheten) med partikelfiltret (hanterar "multi-modal" fördelningar). Det fungerar så att man marginaliserar ut den linjära delen representerar den med en normalfördelning och låter partikelfiltret hantera de icke-linjära delarna.

			Man låter då varje partikel både representera pose och innehålla en karta. Då blir givet en pose, så blir landmarks okorrelerade.
	    </Answer>
	</TestQuestion>
	<TestQuestion Category="Mapping">
	    <Question>
	    	Vad är en pose graf?
	    </Question>
	    <Answer>
			Det är en algoritm för SLAM. Man kan formulera mappningsproblemet som ett graf optimeringsproblem istället. Då låter man ett hörn i grafen representera posen för där en sensoravläsning gjordes och begräsningar ifrån odometrin och mätningar bli kanter.

			Sedan använder man sig av icke-linjära optimeringar för att hitta den optimala grafen, det vill säga den optimala positionen för roboten och landmarks.
	    </Answer>
	</TestQuestion>
</Test>
